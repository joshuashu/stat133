hla.donor[1:5, ]
hla.recip[1:5, ]
kir.diff[1:10,]
kir.diff.same[1:10,]
kir.diff.same.sum <- apply(kir.diff.same[, -1], 2, sum)
table(kir.diff.same.sum)
kir.diff.same.sum
kir.diff.same.sum <- apply(kir.diff.same[, -1], 1, sum)
kir.diff.same.sum
kir.diff.same.sum <- apply(kir.diff.same[, -1], 1, sum, na.rm=TRUE)
kir.diff.same.sum
fit <- glm(ar ~ kir.diff.same.sum, family=binomial(link="logit"))
summary(fit)
fit <- glm(can ~ kir.diff.same.sum, family=binomial(link="logit"))
summary(fit)
fit <- glm(tx ~ kir.diff.same.sum, family=binomial(link="logit"))
summary(fit)
fit <- glm(ar[I] ~ kir.diff.same.sum[I], family=binomial(link="logit"))
summary(fit)
fit <- glm(can[I] ~ kir.diff.same.sum[I], family=binomial(link="logit"))
summary(fit)
fit <- glm(tx[I] ~ kir.diff.same.sum[I], family=binomial(link="logit"))
summary(fit)
table(can)
table(can, tx)
table(tx, can+ar)
J <- ar==0 & tx==0 & can==0
sum(J)
data.cov[J, ]
dim(data.cov)
table(can, ar)
pval.mat <- matrix(0, ncol=3, nrow=(ncol(kir)-1))for(i in 2:ncol(kir)){   print("##############################################################################")   print(colnames(kir.diff.same)[i])   print(table(kir.donor[,i]))   print(table(kir.recip[,i]))   K <- ar==0 & can==1   print(table(ar, kir.diff.same[,i]))   fit <- glm(ar[!K] ~ kir.diff.same[!K,i], family=binomial(link="logit"))   print(summary(fit))    pval.mat[i-1, 1] <- summary(fit)$coef[2, 4]      K <- can==0 & ar==1   print(table(can, kir.diff.same[,i]))   fit <- glm(can[!K] ~ kir.diff.same[!K,i], family=binomial(link="logit"))   print(summary(fit))   pval.mat[i-1, 2] <- summary(fit)$coef[2, 4]   print(table(tx, kir.diff.same[,i]))   fit <- glm(tx ~ kir.diff.same[,i], family=binomial(link="logit"))   print(summary(fit))   pval.mat[i-1, 3] <- summary(fit)$coef[2, 4]}colnames(pval.mat) <- c("ar", "can", "tx")rownames(pval.mat) <- colnames(kir)[-1]print(pval.mat)
I <- pval.mat < 0.05
I
fit <- glm(ar ~ kir.diff.same.sum, family=binomial(link="logit"))
summary(fit)
fit <- glm(ar ~ kir.diff.same.sum + data.cov[,"PatientEthnicity"], family=binomial(link="logit"))
summary(fit)
fit <- glm(ar ~ data.cov[,"PatientEthnicity"], family=binomial(link="logit"))
summary(fit)
fit <- glm(ar ~ data.cov[,"DonorEthnicity"], family=binomial(link="logit"))
summary(fit)
tmp <- data.cov[,"DonorEthnicity"]
tmp <- rep(0, nrow(data.cov))
tmp[ data.cov[,"DonorEthnicity"] == 1] <- 1
fit <- glm(ar ~ tmp, family=binomial(link="logit"))
summary(fit)
table(tmp)
sum(tmp)
tmp[ data.cov[,"DonorEthnicity"] == "White"] <- 1
table(tmp)
fit <- glm(ar ~ tmp, family=binomial(link="logit"))
summary(fit)
fit <- glm(ar ~ data.cov[,"AgeAtTransplant"])
data.cov[1:5, ]
fit <- glm(ar ~ data.cov[,"Age_At_Transplant"])
data.cov[1:5, ]
summary(fit)
table(data.cov[,"DonorEthnicity"])
table(data.cov[,"DonorEthnicity"], data.cov[,"PatientEthnicity"])
I <- hla[,"donor"]==1hla.donor <- hla[I, ]hla.rec <- hla[!I,]hla.pair <- matrix(0, nrow=nrow(hla.donor), ncol=2*ncol(hla.donor)-3)for(i in 1:nrow(hla.pair)){   m <- match(hla.donor[i,"id"], hla.rec[, "id"])   hla.pair[i,] <- c(hla.donor[i,-2], hla.rec[m,-(1:2)])}colnames(hla.pair) <- c(colnames(hla.donor)[1], paste("donor_", colnames(hla.donor)[3:10], sep=''), paste("recip_", colnames(hla.rec)[3:10], sep=''))#> colnames(hla.pair)# [1] "id"             "donor_hla.a1"   "donor_hla.a2"   "donor_hla.b1"   "donor_hla.b2"   "donor_hla.c1"  # [7] "donor_hla.c2"   "donor_hla.drb1" "donor_hla.drb2" "recip_hla.a1"   "recip_hla.a2"   "recip_hla.b1"  #[13] "recip_hla.b2"   "recip_hla.c1"   "recip_hla.c2"   "recip_hla.drb1" "recip_hla.drb2"b.alleles <- c(4,5,12,13)b.lig <- 18:21c.alleles <- c(6,7,14,15)c.lig <- 22:25hla.pair <- cbind(hla.pair, matrix(0, nrow=nrow(hla.pair), ncol=8))for(i in 1:nrow(hla.pair)){    for(j in 1:4){       n <- nchar(hla.pair[i,b.alleles[j]])       all <- substr(hla.pa
ir[i,b.alleles[j]], 1, n-5)       lig <- substr(hla.pair[i,b.alleles[j]], n-3, n-1)       hla.pair[i,b.alleles[j]] <- all       hla.pair[i,b.lig[j]] <- lig    }    for(j in 1:4){       n <- nchar(hla.pair[i,c.alleles[j]])       all <- substr(hla.pair[i,c.alleles[j]], 1, n-5)       if(!is.na(all)) {if(all == "C-") all <- NA}       lig <- substr(hla.pair[i,c.alleles[j]], n-3, n-1)       hla.pair[i,c.alleles[j]] <- all       hla.pair[i,c.lig[j]] <- lig    }}colnames(hla.pair)[18:25] <- c("donor_hla.b1.lig", "donor_hla.b2.lig", "recip_hla.b1.lig", "recip_hla.b2.lig", "donor_hla.c1.lig", "donor_hla.c2.lig", "recip_hla.c1.lig", "recip_hla.c2.lig")hla.a.match <- hla.b.match <- hla.blig.match <- hla.c.match <- hla.clig.match <- hla.drb.match <- hla.match <- rep(0, nrow(hla.pair))for(i in 1:nrow(hla.pair)){   m <- match(hla.pair[i,c("donor_hla.a1", "donor_hla.a2")],hla.pair[i,c("recip_hla.a1", "recip_hla.a2")])   hla.a.match[i] <- sum(!is.na(m))   if( (is.na(hla.pair[i,"donor_hla.a1"]) & is.na(
hla.pair[i,"donor_hla.a2"])) | (is.na(hla.pair[i,"recip_hla.a1"]) & is.na(hla.pair[i,"recip_hla.a2"]))) hla.a.match[i] <- NA   m <- match(hla.pair[i,c("donor_hla.b1", "donor_hla.b2")],hla.pair[i,c("recip_hla.b1", "recip_hla.b2")])   hla.b.match[i] <- sum(!is.na(m))   if( (is.na(hla.pair[i,"donor_hla.b1"]) & is.na(hla.pair[i,"donor_hla.b2"])) | (is.na(hla.pair[i,"recip_hla.b1"]) & is.na(hla.pair[i,"recip_hla.b2"]))) hla.b.match[i] <- NA   m <- match(hla.pair[i,c("donor_hla.b1.lig", "donor_hla.b2.lig")],hla.pair[i,c("recip_hla.b1.lig", "recip_hla.b2.lig")])   hla.blig.match[i] <- sum(!is.na(m))   if( (is.na(hla.pair[i,"donor_hla.b1.lig"]) & is.na(hla.pair[i,"donor_hla.b2.lig"])) | (is.na(hla.pair[i,"recip_hla.b1.lig"]) & is.na(hla.pair[i,"recip_hla.b2.lig"]))) hla.blig.match[i] <- NA   m <- match(hla.pair[i,c("donor_hla.c1", "donor_hla.c2")],hla.pair[i,c("recip_hla.c1", "recip_hla.c2")])   hla.c.match[i] <- sum(!is.na(m))   if( (is.na(hla.pair[i,"donor_hla.c1"]) & is.na(hla.pair[i,"donor_hla.c2"])
) | (is.na(hla.pair[i,"recip_hla.c1"]) & is.na(hla.pair[i,"recip_hla.c2"]))) hla.c.match[i] <- NA   m <- match(hla.pair[i,c("donor_hla.c1.lig", "donor_hla.c2.lig")],hla.pair[i,c("recip_hla.c1.lig", "recip_hla.c2.lig")])   hla.clig.match[i] <- sum(!is.na(m))   if( (is.na(hla.pair[i,"donor_hla.c1.lig"]) & is.na(hla.pair[i,"donor_hla.c2.lig"])) | (is.na(hla.pair[i,"recip_hla.c1.lig"]) & is.na(hla.pair[i,"recip_hla.c2.lig"]))) hla.clig.match[i] <- NA   m <- match(hla.pair[i,c("donor_hla.drb1", "donor_hla.drb2")],hla.pair[i,c("recip_hla.drb1", "recip_hla.drb2")])   hla.drb.match[i] <- sum(!is.na(m))   if( (is.na(hla.pair[i,"donor_hla.drb1"]) & is.na(hla.pair[i,"donor_hla.drb2"])) | (is.na(hla.pair[i,"recip_hla.drb1"]) & is.na(hla.pair[i,"recip_hla.drb2"]))) hla.drb.match[i] <- NA}hla.match <- hla.a.match + hla.b.match + hla.c.match + hla.drb.matchhla.lig.match <- hla.a.match + hla.blig.match + hla.clig.match + hla.drb.match#### Do after all data has been combined.## remove individuals with missing
HLA datasum.miss <- vector()for(i in 1:nrow(hla.pair)){   sum.miss[i] <- sum(is.na(hla.pair[i,]))}I <- sum.miss < 8hla.pair <- hla.pair[I,]
dim(hla.lig.match)
hla.lig.match
18*1:10
18*1:25
450*4
3800/21/8
read.table("ALL.chr22.phase1_release_v3.20101123.filt.markers.txt")
x <- read.table("ALL.chr22.phase1_release_v3.20101123.filt.markers.txt")
x[1:10,]
dim(x)
max(x[,2])-min(x[,2])
L <- max(x[,2])-min(x[,2])
L/10000
L/10000/294691
294691/L/10000
294691/(L/10000)
first <- min(x[,2])
first
size <- 10000
overlap <- 1000
last <- max(x[,2])
ls
L <- (last-first)/size
L
L <- floor(L)
ls
L
fra <- first-overlap
til <- first+size + overlap
fra
til
sum(x[,2]>16049408 & x[,2]<16061408)
fra <- first-overlap+size
til <- first+2*size + overlap
fra
til
sum(x[,2]>16049408 & x[,2]<16061408)
fra <- first-overlap+2*size
til <- first+3*size + overlap
sum(x[,2]>16049408 & x[,2]<16061408)
fra
til
fra <- first-overlap+3*size
til <- first+4*size + overlap
fra
til
sum(x[,2]>16049408 & x[,2]<16061408)
sum(x[,2]>fra & x[,2]<til)
fra <- first-overlap+2*size
til <- first+3*size + overlap
sum(x[,2]>fra & x[,2]<til)
fra <- first-overlap+3*size
til <- first+4*size + overlap
sum(x[,2]>fra & x[,2]<til)
5*13/2
5*2/2
8*3/2
8
7
7+8+12+5
5/2
8/3
24 + 28.5
52.5*2
52.5-25.5
24 + 28.5
24.25+25.25
52.5-49.5
52.5+49.5
.75*5
106-3.75
102.25/2
24+27.25
24+27.125
51.125-25.25
strand <- read.table("shapeit_18122012_14h27m20s_96023be8-0b6c-47eb-b1ed-ce49969509dc.snp.strand", header=T)
strand <- read.table("Dropbox/ingileif/RA_meta_notshared/scrips/shapeit_18122012_14h27m20s_96023be8-0b6c-47eb-b1ed-ce49969509dc.snp.strand", header=T)
strand <- read.table("Dropbox/ingileif/RA_meta_notshared/scripts/shapeit_18122012_14h27m20s_96023be8-0b6c-47eb-b1ed-ce49969509dc.snp.strand", header=T)
strand <- read.table("/Users/ingileif/Dropbox/ingileif/RA_meta_notshared/scripts/shapeit_18122012_14h27m20s_96023be8-0b6c-47eb-b1ed-ce49969509dc.snp.strand", header=T)
strand <- read.table("/Users/ingileif/Dropbox/RA_meta_notshared/scripts/shapeit_18122012_14h27m20s_96023be8-0b6c-47eb-b1ed-ce49969509dc.snp.strand", header=T)
strand
strand[1:10,]
table(strand[,"main_A"], strand[,"main_B"], strand[,"ref_A"], strand[,"ref_B"])
tmp <- c(1,2,NA,4,5,NA,6)
tmp
T <- (tmp[1]==1 & tmp[2]==2 | !is.na(tmp[3] | !is.na(tmp[4]))
)
T <- (tmp[1]==1 & tmp[2]==2 | !is.na(tmp[3] | !is.na(tmp[4])))
T
T <- (tmp[1]==1 & tmp[2]==2 | !is.na(tmp[3]) | !is.na(tmp[4]))
T
!is.na(tmp[3])
is.na(tmp[3])
36800000^2
A <- matrix(c(4,0,0,0,2,-2,0,0,2,0,-2,0,1,-1,-1,1), byrow=T, ncol=4)
A
inv(A)
help(inverse)
solve(A)
x <- (0:10)*0.01
x
x <- (0:100)*0.01
plot(x, exp(x))
lines(x, exp(2*x))
plot(x, exp(x), type="l")
lines(x, exp(2*x))
p <- seq(0,1,0.01)
plot(p/(1-p))
plot(p,p/(1-p))
plot(p,log(p/(1-p)), type="l")
abline(h=0)
y <- seq(-4, -1, by=0.05)
plot(y, exp(y))
plot(y, exp(y), type="l")
lines(y, exp(2*y), type="l", lty=3)
plot(y, exp(y), type="l", ylim=c(0, 0.4))
lines(y, exp(2*y), type="l", lty=3)
plot(p,log(p/(1-p)), type="l")
abline(h=0)
abline(h=-2)
exp(-2)/(1+exp(-2))
exp(-2)
299,512.20 + 15,144.96 + 772.06 + 96,580.51 + 33,165.04 + 12,930.25 + 6,150.69 + 7,578.47 + 15,423.25
299512.20 + 15144.96 + 772.06 + 96580.51 + 33165.04 + 12930.25 + 6150.69 + 7578.47 + 15423.25
738750-487257.4
738750+359098
353656*3
251492.6/14638
help(merge)
pdf(file="/Users/ingileif/Dropbox/ymislegt/hlaup/thyngd.pdf")##########################data <- read.table("/Users/ingileif/Dropbox/ymislegt/hlaup/thyngd", header=TRUE)x <- data[,"ar"] + 1/12 * (data[,"man"]-1) + 1/365 * data[,"dagur"]x.ofr <- c(2007, 2007+8/12+6/365, 2008+10/12+15/365, 2009+7/12+9/365, 2011+1/12+3/365, 2011+9/12+27/365)data <- cbind(dags=x, data)arin <- seq(min(data[,"ar"]), max(data[,"ar"]), 1)kiloin <- seq( floor(min(data[,"kg"], na.rm=TRUE)), ceiling(max(data[,"kg"], na.rm=TRUE)), 1)
plot(data[,"dags"], data[,"kg"], type='o', xlab="dags", ylab="kg")abline(v=arin, lty=3)abline(h=kiloin, lty=3)abline(h=c(20, 25, 30)*1.61^2, lty=2, col="blue")## olettaabline(v=x.ofr, col="red")rect(x.ofr[1], min(kiloin), x.ofr[2], max(kiloin), col="grey", border=NA, density=10)rect(x.ofr[3], min(kiloin), x.ofr[4], max(kiloin), col="grey", border=NA, density=10)rect(x.ofr[5], min(kiloin), x.ofr[6], max(kiloin), col="grey", border=NA, density=10)
par(mfrow=c(2,3))plot(data[,"dags"], data[,"brjost"], type='o', xlab="dags", ylab="brjost (cm)")abline(v=seq(1990, 2015, by=5), lty=3)abline(v=2007.75, lty=2, col="red")abline(h=seq(80, 105, by=5), lty=3)plot(data[,"dags"], data[,"mitti"], type='o', xlab="dags", ylab="mitti (cm)")abline(v=seq(1990, 2015, by=5), lty=3)abline(v=2007.75, lty=2, col="red")abline(h=seq(60, 95, by=5), lty=3)plot(data[,"dags"], data[,"mjadmir"], type='o', xlab="dags", ylab="mjadmir (cm)")abline(v=seq(1990, 2015, by=5), lty=3)abline(v=2007.75, lty=2, col="red")abline(h=seq(90, 110, by=5), lty=3)plot(data[,"kg"], data[,"brjost"], type='p', xlab="kg", ylab="brjost (cm)")abline(v=seq(50, 80, by=5), lty=3)abline(h=seq(80, 105, by=5), lty=3)I <- data[,"dags"] >= 2007.5points(data[I,"kg"], data[I,"brjost"], pch="*", col="blue")plot(data[,"kg"], data[,"mitti"], type='p', xlab="kg", ylab="mitti (cm)")abline(v=seq(50, 80, by=5), lty=3)abline(h=seq(65, 95, by=5), lty=3)I <- data[,"dags"] >= 2007.5points(data[I,"kg"
], data[I,"mitti"], pch="*", col="blue")plot(data[,"kg"], data[,"mjadmir"], type='p', xlab="kg", ylab="mjadmir (cm)")abline(h=seq(90, 110, by=5), lty=3)abline(v=seq(50, 80, by=5), lty=3)I <- data[,"dags"] >= 2007.5points(data[I,"kg"], data[I,"mjadmir"], pch="*", col="blue")####plot(data[,"kg"], data[,"mjadmir"], type='p', xlab="kg", ylab="mjadmir (cm)")abline(h=seq(90, 115, by=5), lty=3)abline(v=seq(50,80,by=5), lty=3)I <- data[,"dags"] >= 2007.5points(data[I,"kg"], data[I,"mjadmir"], pch="*", col="blue")I <- data[,"dags"] < 2000points(data[I,"kg"], data[I,"mjadmir"], pch="*", col="green")I <- data[,"dags"] >= 2000 & data[,"dags"] < 2003points(data[I,"kg"], data[I,"mjadmir"], pch="*", col="red")I <- data[,"dags"] >= 2003 & data[,"dags"] < 2005points(data[I,"kg"], data[I,"mjadmir"], pch="*", col="orange")I <- data[,"dags"] >= 2005 & data[,"dags"] < 2007.5points(data[I,"kg"], data[I,"mjadmir"], pch="*", col="purple")####################################plot(data[,"kg"], data[,"mi
tti"], type='p', xlab="kg", ylab="mitti (cm)")abline(h=seq(70, 85, by=5), lty=3)abline(v=seq(50,80,by=5), lty=3)I <- data[,"dags"] >= 2007.5points(data[I,"kg"], data[I,"mitti"], pch="*", col="blue")I <- data[,"dags"] < 2000points(data[I,"kg"], data[I,"mitti"], pch="*", col="green")I <- data[,"dags"] >= 2000 & data[,"dags"] < 2003points(data[I,"kg"], data[I,"mitti"], pch="*", col="red")I <- data[,"dags"] >= 2003 & data[,"dags"] < 2005points(data[I,"kg"], data[I,"mitti"], pch="*", col="orange")I <- data[,"dags"] >= 2005 & data[,"dags"] < 2007.5points(data[I,"kg"], data[I,"mitti"], pch="*", col="purple")####################################plot(data[,"kg"], data[,"mjadmir"]+data[,"mitti"], type='p', xlab="kg", ylab="mjadmir+mitti (cm)")abline(h=seq(160, 205, by=5), lty=3)abline(v=seq(50,80,by=5), lty=3)I <- data[,"dags"] >= 2007.5points(data[I,"kg"], data[I,"mjadmir"]+data[I,"mitti"], pch="*", col="blue")I <- data[,"dags"] < 2000points(data[I,"kg"], data[I,"mjadmir"]+data[I,"mitti"],
pch="*", col="green")I <- data[,"dags"] >= 2000 & data[,"dags"] < 2003points(data[I,"kg"], data[I,"mjadmir"]+data[I,"mitti"], pch="*", col="red")I <- data[,"dags"] >= 2003 & data[,"dags"] < 2005points(data[I,"kg"], data[I,"mjadmir"]+data[I,"mitti"], pch="*", col="orange")I <- data[,"dags"] >= 2005 & data[,"dags"] < 2007.5points(data[I,"kg"], data[I,"mjadmir"]+data[I,"mitti"], pch="*", col="purple")####################plot(data[,"mjadmir"], data[,"mitti"], type='p', xlab="mjadmir", ylab="mitti (cm)")abline(v=seq(90, 110, by=5), lty=3)abline(h=seq(65, 95, by=5), lty=3)I <- data[,"dags"] >= 2007.5points(data[I,"mjadmir"], data[I,"mitti"], pch="*", col="blue")plot(data[,"mitti"], data[,"mjadmir"], type='p', xlab="mjadmir", ylab="mitti")abline(v=seq(60, 95, by=5), lty=3)abline(h=seq(90, 110, by=5), lty=3)I <- data[,"dags"] >= 2007.5points( data[I,"mitti"], data[I,"mjadmir"],pch="*", col="blue")plot(data[,"dags"], data[,"mitti"]/data[,"mjadmir"], type='o', xlab="dags", ylab="mitti/mjadmi
r")abline(v=seq(1990, 2015, by=5), lty=3)abline(v=2007.75, lty=2, col="red")abline(h=seq(0.675, 1.00, by=0.025), lty=3)dev.off()
objects()
ls()
help(objects)
help(mean)
help(summary)
x <- rnorm(100)
summary(x)
help(class)
class(x)
load("/Users/ingileif/src/assignments-fall2014/hw2/SFHousing.rda")
list(ls())
rm(ls())
rm(list=ls())
load("/Users/ingileif/src/assignments-fall2014/hw2/SFHousing.rda")
ls()
dim(cities)
dim(housing)
names(housing)
berk <- housing[ housing$city=="Berkeley", c("price", "br", "lsqft", "bsqft")]
dim(berk)
hist(berk$price)
class(housing$city)
help(ks.test)
shapiro.wilk(berk$price)
shapiro.test(berk$price)
lev.city <- levels(housing$city)
length(lev.city)
lev.city[1]
n.city <- length(lev.city)
for(i in 1:n.city){ shapiro.test( housing$price[housing$city==lev.city[i]] )}
for(i in 1:n.city){ print(i); shapiro.test( housing$price[housing$city==lev.city[i]] )}
lev.city[7]
housing[housing$city==lev.city[7]]
housing[housing$city==lev.city[7],]
dim(housing[housing$city==lev.city[7],])
help(shapiro.test)
help.search("lilliefors")
help(ks.test)
help(lillie.test)
help.search("anderson")
help.search("darling")
ks.test(housing$price[housing$city==lev.city[1]], housing$price[housing$city==lev.city[2]])
help(sapply)
X <- list(list(a=pi, b=list(c=1:1)), d="a test")#
rapply(X, function(x) x, how="replace")#
rapply(X, sqrt, classes="numeric", how="replace")#
rapply(X, nchar, classes="character",#
deflt = as.integer(NA), how="list")#
rapply(X, nchar, classes="character",#
deflt = as.integer(NA), how="unlist")#
rapply(X, nchar, classes="character", how="unlist")#
rapply(X, log, classes="numeric", how="replace", base=2)
X
help(by)
by(housing, city, function(x){ ks.test(x , housing$price[housing$city==lev.city[1]]) })
by(housing, housing$city, function(x){ ks.test(x , housing$price[housing$city==lev.city[1]]) })
by(housing$price, housing$city, function(x){ ks.test(x , housing$price[housing$city==lev.city[1]]) })
help(readLines)
setwd("~/src/assignments-fall2014/hw7")
readLines(file="stateoftheunion1790-2012.txt.zip")
help(file)
help(file)
file
rm(file)
help(file)
help(zfile)
readLines(con <- file("stateoftheunion1790-2012.txt.zip"))
readLines(con <- file("stateoftheunion1790-2012.txt"))
speeches <- readLines(con <- file("stateoftheunion1790-2012.txt"))
class(speeches)
length(speeches)
speeches[1]
speeches[2]
speeches[3]
speeches[4]
speeches[5]
speeches[6]
speeches[7]
speeches[8]
speeches[9]
speeches[10]
speeches[11]
speeches[12]
speeches[13]
speeches[14]
speeches[15]
speeches[16]
speeches[17]
help(grep)
breaks <- grep("***", speeches)
breaks <- grep("\*\*\*", speeches)
breaks <- grep("\\*\\*\\*", speeches)
breaks
length(breaks)
speeches[235]
speeches[362]
speeches[509]
speeches[235:245]
tempDates <- speeches[breaks+4]
tempDates[1:5]
help(sub)
help(substr)
speechYr <- sapply(tempDates, function(x) substr(x, nchar(x)-4, nchar(x)))
speechYr
speechYr <- sapply(tempDates, function(x) substr(x, nchar(x)-3, nchar(x)))
speechYr
names(speechYr) <- NA
speechYr
names(speechYr) <- ""
speechYr
names(speechYr) <- NULL
speechYr
tempDates
help(strsplit)
breaks
speeches[breaks]
speechYr
speechYr <- as.numeric(sapply(tempDates, function(x) substr(x, nchar(x)-3, nchar(x))))
speechYr
speeches[breaks]
breaks <- breaks[-length(breaks)]
speeches[breaks]
tempDates <- speeches[breaks+4]
tempDates
yrLocs = as.numeric(gregexpr("[0-9]{4}$", tempDates))
yrLocs
tempDates[1][12]
tempDates[1]
help(strsplit)
tmp <- strsplit(tmpDates, split=" ")
tmp <- strsplit(tempDates, split=" ")
tmp
speechMo <- sapply(tmpMonth, "[", 1)
tmpMonth <- strsplit(tempDates, split=" ")
speechMo <- sapply(tmpMonth, "[", 1)
speechMo
speeches[1:20]
speeches[breaks+(0:20)]
speeches[breaks[1]+(0:20)]
presidents <- speeches[breaks+3]
presidents
breaks
speeches[breaks[1]:(breaks[2])-1]
tmpSpeeches <- apply(speeches, "[", breaks[1:(n.speeches-1)]:breaks[2:n.speeches])
n.speeches <- length(speeches)
tmpSpeeches <- apply(speeches, "[", breaks[1:(n.speeches-1)]:breaks[2:n.speeches])
breaks[1:(n.speeches-1)]:breaks[2:n.speeches]
breaks[1:(n.speeches-1)]
breaks
breaks[1:(n.speeches-1)]
n.speeches <- length(breaks)
tmpSpeeches <- apply(speeches, "[", breaks[1:(n.speeches-1)]:breaks[2:n.speeches])
breaks[1:(n.speeches-1)]
breaks[2:n.speeches]
tmpSpeeches <- apply(speeches, function(x) x[breaks[1:(n.speeches-1)]:breaks[2:n.speeches]])
tmpSpeeches <- apply(speeches, function(x) x[breaks[1:(n.speeches-1)]:breaks[2:n.speeches]])
help(subset)
help(apply)
help(paste)
i <- 1
str <- paste(speeches[breaks[i]:(breaks[i]-1)], sep=" ", collapse=" ")
str
str <- paste(speeches[breaks[i]:(breaks[i+1]-1)], sep=" ", collapse=" ")
str
speeches[breaks[1]:(breaks[1]+50)]
str <- paste(speeches[(breaks[i]+6):(breaks[i+1]-1)], sep=" ", collapse=" ")
str
speechesL <- list()
for(i in 1:n.speeches){
str <- paste(speeches[(breaks[i]+6):(breaks[i+1]-1)], sep=" ", collapse=" ")
speechesL[[i]] <- unlist(strsplit(str, "[.?!]"))
}
breaks
speeches[169428]
speeches[169428+(0:10)]
breaks <- grep("\\*\\*\\*", speeches)
speeches[breaks]
breaks
speeches[169428:169641]
speechesL <- list()
for(i in 1:n.speeches){
str <- paste(speeches[(breaks[i]+6):(breaks[i+1]-1)], sep=" ", collapse=" ")
speechesL[[i]] <- unlist(strsplit(str, "[.?!]"))
}
speechesL[[1]]
load("IntermediateResults.Rda")
dim(presMat)
presMat[1:10,]
library(Rstem)
install.packages(Rstem)
help.search("Rstem")
load("Rstem")
?load
install.packages("Rstem")
dim(speechesDF)
speechesDF[1:10,]
speechesL[[1]]
